{"version":3,"sources":["request.js","components/Auth/Auth.js","components/Dashboard/Dashboard.js","components/RespondAnswer/RespondAnswer.js","components/YesNoQuestion/YesNoQuestion.js","history.js","Routes.js","App.js","index.js"],"names":["baseURL","Auth","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResponse","data","result","localStorage","setItem","token","setState","user_details","errorState","window","location","reload","error","errors","submitHandler","event","preventDefault","register","state","target","className","checkValidity","axios","post","concat","name","password","repassword","then","res","catch","err","console","log","changeHandler","objectSpread","defineProperty","value","loggedIn","_this2","_this$state","react_default","a","createElement","onSubmit","noValidate","mdbreact","onChange","type","id","placeholder","required","onClick","Component","Dashboard","allUserApiCall","getItem","all_users","guesser_id","guessword","guess_word","pk","_this$state2","map","user","e","RespondAnswer","apiCall","winner","all_question","can_ask_question","all_answer","guess_word_id","req","answer","question","guess_answer","active_question","endGame","length","index","response","guessedanswer","YesNoQuestion","new_question","yes_no_question","guessed_word","word","responded_yes_no_question","question_id","given_response","getOwnPropertyNames","createBrowserHistory","Routes","Router","history","Switch","Route","exact","path","component","App","verifyUser","handleTokenResponse","in_game","user_type","push","src_Routes","ReactDOM","render","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f2c75453.chunk.js","sourcesContent":["// eslint-disable-next-line\nlet baseURL = ''\nexport default baseURL = 'http://139.59.81.93:8000/api/' ","import '../main.scss';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Row } from 'mdbreact';\nimport baseURL from '../../request';\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      name: '',\n      password: '',\n      repassword: '',\n      user_details:{},\n      register:true,\n      loggedIn:false,\n      errorState:false,\n      error:false,\n    }\n  }\n\n  \n\n  handleResponse=(data)=>{\n    if (data.result) {\n      localStorage.setItem('token', data.token);\n      this.setState({user_details: data.data, errorState:false})\n      window.location.reload()\n    }else{\n      this.setState({error:data.errors[0], errorState:true})\n    }\n  }\n\n\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const {register} = this.state;\n    event.target.className += ' was-validated';\n    if(event.target.checkValidity()){\n      if (register){\n        axios.post(`${baseURL}user/register/`, {\n            \"name\": this.state.name,\n            \"password\": this.state.password,\n            \"repassword\":this.state.repassword,\n          })\n        .then(res => {\n          const data = res.data;\n          this.handleResponse(data)\n          \n        }).catch(err => {\n          console.log(err);          \n        });\n      }else{\n        axios.post(`${baseURL}user/login/`, {\n            \"name\": this.state.name,\n            \"password\": this.state.password,\n            \"repassword\":this.state.repassword,\n          })\n        .then(res => {\n          const data = res.data;\n          this.handleResponse(data)\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  }\n\n\n\n  changeHandler = (event) => {\n    this.setState({...this.state, [event.target.name]: event.target.value});\n  }\n\n\n  \n  render() {\n    const {register, errorState, error} = this.state\n    return (\n      <div className={'col-lg-4 offset-lg-4 main-page'}>\n        <div className={'register-div'}>\n          <h1> {register ? 'Register' : 'Login'} </h1>\n          <form onSubmit={this.submitHandler} className={''} noValidate>\n            <Row>\n              <div className=\"col-12 input-div\">\n                <input value={this.state.name} name='name' onChange={this.changeHandler} type=\"text\" id=\"defaultFormRegisterNameEx\"\n                className=\"form-control\" placeholder=\"Name\" required/>\n                <div className=\"invalid-feedback \">This field cannot be empty.</div>\n              </div>\n              <div className=\"col-12 input-div\">\n                <input value={this.state.password} name='password' onChange={this.changeHandler} type=\"password\" id=\"defaultFormRegisterPassEx\"\n                className=\"form-control\" placeholder=\"Password\" required/>\n                <div className=\"invalid-feedback \">This field cannot be empty.</div>\n              </div> \n              {register ?\n              <div className=\"col-12 input-div\">\n                <input value={this.state.repassword} name='repassword' onChange={this.changeHandler} type=\"password\" id=\"defaultFormRegisterRepassEx\"\n                className=\"form-control\" placeholder=\"Re Password\" required/>\n                <div className=\"invalid-feedback \">This field cannot be empty.</div>\n              </div>: null }\n              <button className=\"btn btn-unique button-class\" type=\"submit\">Submit</button>\n              <span className={'login-register'} onClick={() => this.setState({register:!register})}> {register ? 'Already registered login?': 'Register?'} </span>\n            </Row>\n          </form>\n        </div>\n        {errorState? <span className={'error-value'}>{error}</span>:null}\n      </div>\n    );\n  }\n}\n\nexport default Auth;\n","import '../main.scss';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport baseURL from '../../request';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      all_users:[],\n      guessword:{},\n      token:'',\n      errorState:false,\n      error:false,\n    }\n  }\n\n  componentDidMount(){\n    this.allUserApiCall()\n  }\n\n  allUserApiCall=()=>{\n    const token = localStorage.getItem('token')\n    axios.post(`${baseURL}user/all_users/`, {\n        \"token\": token\n      })\n    .then(res => {\n      const data = res.data;\n      if (data.result) {\n        this.setState({all_users: data.data, token:token, errorState:false})\n      }else{\n        this.setState({error:data.errors[0], errorState:true})\n      }\n    })\n  }\n\n\n  submitHandler = (event, guesser_id) => {\n    event.preventDefault();\n    const { token, guessword} = this.state;\n    event.target.className += ' was-validated';\n    if(event.target.checkValidity()){\n      axios.post(`${baseURL}guessedword/start_game/`, {\n          \"token\": token,\n          \"guesser_id\": guesser_id,\n          \"guess_word\":guessword[guesser_id],\n        })\n      .then(res => {\n        const data = res.data;\n        \n        if (data.result) {\n          localStorage.setItem('co_user_id', guesser_id)\n          this.setState({errorState:false})\n          window.location.reload()\n        }else{\n          this.setState({error:data.errors[0], errorState:true})\n        }\n      }).catch(err => {\n        console.log(err);          \n      });\n    \n    }\n  }\n\n  changeHandler = (event, pk) => {\n    this.setState({...this.state, guessword: {[pk]:event.target.value}});\n  }\n  \n  render() {\n    const {all_users, errorState, error} = this.state\n    console.log(this)\n    return (\n      <div className={'list-users-page'}>\n        <h1>List of available users to play</h1>\n        <h5>give them a word to guess</h5>\n        {all_users.map(user=>{\n          return(\n            <div className={'card col-12'}><div className={'card-body'}><p className={'card-text'}>{user.name}</p><form onSubmit={(e)=> this.submitHandler(e, user.pk)} noValidate><input onChange={(e)=> this.changeHandler(e,user.pk)}  name='guessword' className={'form-control'} placeholder={'type word here'} value={this.state.guessword[user.id]} required/><button type={'submit'} className={'btn btn-primary'}>Ask</button></form></div></div>\n        )})}\n        {errorState? <p className={'error-value'}>{error}</p>:null}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import './style.scss';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport baseURL from '../../request';\n\nclass RespondAnswer extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      all_question:[],\n      all_answer:[],\n      active_question:{},\n      token:'',\n      question:'',\n      answer:'',\n      guess_word_id:'',\n      errorState:false,\n      error:false,\n      winner: '',\n    }\n  }\n\n  componentDidMount(){\n    this.apiCall()\n  }\n\n  apiCall=()=>{\n    const token = localStorage.getItem('token')\n    axios.post(`${baseURL}yesnoquestion/list_question_guessed_words/`, {\n        token: token,\n      })\n    .then(res => {\n      const data = res.data;\n      console.log('data',data)\n      if (data.result) {\n        this.setState({winner:data.winner, all_question: data.all_question, can_ask_question:data.can_ask_question, all_answer:data.all_answer, token:token, guess_word_id:data.guess_word_id, errorState:false})  \n      }else{\n        this.setState({error:data.errors[0], errorState:true})\n      }\n      \n    })\n  }\n\n  \n  submitHandler = (event, req) => {\n    event.preventDefault();\n    const { token, answer, guess_word_id, question} = this.state;\n    event.target.className += ' was-validated';\n    if(event.target.checkValidity()){\n      if (req === 'question') {\n        axios.post(`${baseURL}yesnoquestion/ask_question/`, {\n            token: token,\n            guess_word_id: guess_word_id,\n            question: question,\n          })\n        .then(res => {\n          const data = res.data;\n          if (data.result) {\n            this.apiCall()\n            this.setState({errorState:false})\n          }else{\n            this.setState({error:data.errors[0], errorState:true})\n          }\n          console.log(data);\n        }).catch(err => {\n          console.log(err);          \n        });\n      }else if (req === 'answer') {\n        axios.post(`${baseURL}yesnoquestion/submit_answer/`, {\n            token: token,\n            guess_word_id: guess_word_id,\n            guess_answer: answer,\n          })\n        .then(res => {\n          const data = res.data;\n          if (data.result === 1) {\n            this.apiCall()\n            this.setState({errorState:false})\n          }else if (data.result === 2) {\n            window.location.reload()\n          }else{\n            this.setState({error:data.errors[0], errorState:true})\n          }\n          console.log(data);\n        }).catch(err => {\n          console.log(err);          \n        });\n      }\n    }\n  }\n\n  endGame(){\n    const token = localStorage.getItem('token')\n    axios.post (`${baseURL}yesnoquestion/end_game/`, {\n        \"token\": token\n      })\n    .then(res => {\n      window.location.reload()\n    })\n  }\n\n  changeHandler = (event, type) => {\n    this.setState({...this.state, [type]:event.target.value});\n  }\n  \n  render() {\n    const {all_question, all_answer, can_ask_question, errorState, error, winner} = this.state\n    return (\n      <div className={'main-page row'}>\n        { winner ? <div> <p>winner of last game was {winner}</p> <button className={'btn btn-primary'} onClick={()=>this.endGame()} > Okay </button></div>:\n        <div>\n        <div className={'col-lg-6'}>\n          <h1>List of available question asked</h1>\n          <h5>ask yes no question ( {all_question.length}/ 20)</h5>\n          {all_question.map((question, index)=>{\n            return(\n              <div className={'card col-12'}><div className={'card-body'}>{index+1}. <h3 className={'card-text'}>{question.question}</h3><h6 className={'card-text'}>{question.response}</h6></div></div>\n          )})}\n          {can_ask_question?  <div>\n            <form onSubmit={(e)=> this.submitHandler(e,'question')}>\n              <input onChange={(e)=> this.changeHandler(e, 'question')}  name='question' className={'form-control'} placeholder={'type question here'} value={this.state.question} required/>\n              <button type={'submit'} className={'btn btn-primary'} > Submit </button>\n\n            </form>\n          </div>:null}\n        </div>\n        <div className={'col-lg-6'}>\n          <h1>List of available guessed word submitted</h1>\n          \n          {all_answer.map(answer=>{\n            return(\n              <div className={'card col-12'}><div className={'card-body'}><h3 className={'card-text'}>{answer.guessedanswer}</h3></div></div>\n          )})}\n          <h5>you can submit your answer anytime</h5>\n          <div>\n            <form onSubmit={(e)=> this.submitHandler(e,'answer')}>\n              <input onChange={(e)=> this.changeHandler(e, 'answer')}  name='answer' className={'form-control'} placeholder={'type answer here'} value={this.state.answer} required/>\n              <button type={'submit'} className={'btn btn-primary'} > Submit </button>\n\n            </form>\n          </div>\n        </div>\n        {errorState? <p className={'error-value'}>{error}</p>:null}</div>}\n      </div>\n    );\n  }\n}\n\nexport default RespondAnswer;\n","import './style.scss';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport baseURL from '../../request';\n\nclass YesNoQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      all_question:[],\n      active_question:{},\n      token:'',\n      new_question:{},\n      errorState:false,\n      error:false,\n      winner:'',\n    }\n  }\n\n  componentDidMount(){\n    this.apiCall()\n  }\n\n  apiCall=()=>{\n    const token = localStorage.getItem('token')\n    axios.post(`${baseURL}yesnoquestion/list_questions/`, {\n        token: token,\n      })\n    .then(res => {\n      const data = res.data;\n      console.log('data',data)\n      let new_question = {}\n      if (data.result) {\n        if (data.data.yes_no_question) {\n          new_question = data.data.yes_no_question[0]\n        }\n        this.setState({winner:data.winner, guess_word: data.data.guessed_word.word,all_question: data.data.responded_yes_no_question, new_question:new_question, token:token, errorState:false})  \n      }else{\n        this.setState({error:data.errors[0], errorState:true})\n      }\n      \n    })\n  }\n\n  \n  submitHandler = (question_id, given_response) => {\n    const { token} = this.state;\n    axios.post(`${baseURL}yesnoquestion/respond_to_question/`, {\n        \"token\": token,\n        \"question_id\": question_id,\n        \"given_response\": given_response,\n      })\n    .then(res => {\n      const data = res.data;\n      console.log(data);\n      if (data.result) {\n        this.apiCall()\n        this.setState({errorState:false})\n      }else{\n        this.setState({error:data.errors[0], errorState:true})\n      }\n    }).catch(err => {\n      console.log(err);          \n    });\n    \n  }\n\n\n\n  endGame(){\n    const token = localStorage.getItem('token')\n    axios.post (`${baseURL}yesnoquestion/end_game/`, {\n        \"token\": token\n      })\n    .then(res => {\n      window.location.reload()\n    })\n  }\n\n  changeHandler = (event, pk) => {\n    this.setState({...this.state, guessword: {[pk]:event.target.value}});\n  }\n  \n  render() {\n    const {all_question, new_question, guess_word, errorState, error, winner} = this.state\n    console.log()\n    return (\n      <div className={'col-lg-6 offset-lg-3 question-page'}>\n        { winner ? <div> <p>winner of last game is {winner}</p> <button className={'btn btn-primary'} onClick={()=>this.endGame()} > Okay </button></div>:\n        <div>\n          <h1>List of available questions asked</h1>\n          <h4>Given word was \"{guess_word}\"</h4>\n          <h5>New question available ( {all_question.length}/ 20)</h5>\n          {all_question.map((question, index)=>{\n            return(\n              <div className={'card col-12'}>\n                <div className={'card-body'}>\n                  <h4 className={'card-text'}>{index+1}. {question.question}</h4>\n                  <p>Response {question.response}</p>\n                </div>\n              </div>\n          )})}\n          { Object.getOwnPropertyNames(new_question).length > 0 ? \n          <div className={'card col-12'}>\n            <div className={'card-body'}>\n              <p className={'card-text'}>{new_question.question}</p>\n              <div>\n                <button onClick={()=>this.submitHandler(new_question.pk, 'yes')} className={'btn btn-primary'}>Yes</button>\n                <button onClick={()=>this.submitHandler(new_question.pk, 'no')} className={'btn btn-primary'}>No</button>\n              </div>\n            </div>\n          </div>:null}\n        </div>}\n        {errorState? <p className={'error-value'}>{error}</p>:null}\n      </div>\n    );\n  }\n}\n\nexport default YesNoQuestion;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport { Switch, Route, Router } from 'react-router-dom';\n\nimport Auth from './components/Auth/Auth';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport RespondAnswer from './components/RespondAnswer/RespondAnswer';\nimport YesNoQuestion from './components/YesNoQuestion/YesNoQuestion';\nimport history from './history';\n\nconst Routes = () => (\n  <main>\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={Auth}/>\n        <Route path='/dashboard' component={Dashboard}/>\n        <Route path='/yes-no-question' component={YesNoQuestion}/>\n        <Route path='/submit-answer' component={RespondAnswer}/>\n      </Switch>\n    </Router>\n  </main>\n)\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport Routes from './Routes';\n\nimport './app.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from 'axios';\nimport baseURL from './request';\n\nclass App extends Component {\n\n\tcomponentDidMount(){\n\t    this.verifyUser()\n\t}\n\n\tverifyUser(){\n\t    const token = localStorage.getItem('token')\n\t    axios.post (`${baseURL}user/verify_user/`, {\n\t        \"token\": token\n\t      })\n\t    .then(res => {\n\t      const data = res.data;\n\t      this.handleTokenResponse(data)\n\t    })\n\t  }\n\n\thandleTokenResponse(data){\n\t    if (data.result) {\n\t      if (data.data.in_game) {\n\t        if (data.data.user_type === 'ask') {\n\t          this.props.history.push('/yes-no-question')\n\t        }else if (data.data.user_type === 'guess') {\n\t          this.props.history.push('/submit-answer')\n\t        }\n\t      }else{\n\t      \tthis.props.history.push('/dashboard')\n\t      }\n\t    }else{\n\t    \tthis.props.history.push('/')\n\t    }\n\t}\n\trender() {\n\t    return (\n        \t<Routes/>\n\t    );\n\t  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport history from './history';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App history={history}/>\n  </BrowserRouter>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}